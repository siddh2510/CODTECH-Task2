import java.util.ArrayList;
import java.util.Scanner;

class Account {
    private String accountHolder;
    private String accountNumber;
    private double balance;
    private ArrayList<String> transactionHistory;

    public Account(String accountHolder, String accountNumber) {
        this.accountHolder = accountHolder;
        this.accountNumber = accountNumber;
        this.balance = 0.0;
        this.transactionHistory = new ArrayList<>();
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        if (amount <= 0) {
            System.out.println("Deposit amount must be positive.");
            return;
        }
        balance += amount;
        transactionHistory.add("Deposited: $" + amount);
    }

    public boolean withdraw(double amount) {
        if (amount <= 0) {
            System.out.println("Withdrawal amount must be positive.");
            return false;
        }
        if (amount <= balance) {
            balance -= amount;
            transactionHistory.add("Withdrew: $" + amount);
            return true;
        } else {
            System.out.println("Insufficient funds.");
            return false;
        }
    }

    public void transfer(Account targetAccount, double amount) {
        if (amount <= 0) {
            System.out.println("Transfer amount must be positive.");
            return;
        }
        if (this.withdraw(amount)) {
            targetAccount.deposit(amount);
            transactionHistory.add("Transferred: $" + amount + " to Account " + targetAccount.getAccountNumber());
            targetAccount.addTransactionHistory("Received: $" + amount + " from Account " + this.getAccountNumber());
        }
    }

    public void viewTransactionHistory() {
        System.out.println("Transaction History for Account " + accountNumber + ":");
        if (transactionHistory.isEmpty()) {
            System.out.println("No transactions yet.");
        } else {
            for (String transaction : transactionHistory) {
                System.out.println(transaction);
            }
        }
    }

    public void addTransactionHistory(String transaction) {
        transactionHistory.add(transaction);
    }

    public void updateAccountHolder(String newAccountHolder) {
        this.accountHolder = newAccountHolder;
    }

    public String getAccountHolder() {
        return accountHolder;
    }
}

public class Main {
    private static ArrayList<Account> accounts = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n=== Welcome to Online Banking System ===");
            System.out.println("1. Create Account");
            System.out.println("2. View Account Details");
            System.out.println("3. Deposit Money");
            System.out.println("4. Withdraw Money");
            System.out.println("5. Transfer Money");
            System.out.println("6. View Transaction History");
            System.out.println("7. Update Personal Information");
            System.out.println("8. Exit");
            System.out.print("Enter your choice: ");
            
            if (!scanner.hasNextInt()) {
                System.out.println("Invalid input. Please enter a number between 1 and 8.");
                scanner.next(); // Clear invalid input
                continue;
            }
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    createAccount();
                    break;
                case 2:
                    viewAccountDetails();
                    break;
                case 3:
                    depositMoney();
                    break;
                case 4:
                    withdrawMoney();
                    break;
                case 5:
                    transferMoney();
                    break;
                case 6:
                    viewTransactionHistory();
                    break;
                case 7:
                    updatePersonalInfo();
                    break;
                case 8:
                    System.out.println("Thank you for using the Online Banking System!");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void createAccount() {
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Account Holder's Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter a unique Account Number: ");
        String accountNumber = scanner.nextLine();

        if (findAccountByNumber(accountNumber) != null) {
            System.out.println("Account number already exists. Please try again.");
            return;
        }

        Account newAccount = new Account(name, accountNumber);
        accounts.add(newAccount);
        System.out.println("Account created successfully!");
    }

    private static Account findAccountByNumber(String accountNumber) {
        for (Account account : accounts) {
            if (account.getAccountNumber().equals(accountNumber)) {
                return account;
            }
        }
        return null;
    }

    private static void viewAccountDetails() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.next();
        Account account = findAccountByNumber(accountNumber);
        if (account != null) {
            System.out.println("Account Holder: " + account.getAccountHolder());
            System.out.println("Account Number: " + account.getAccountNumber());
            System.out.println("Balance: $" + account.getBalance());
        } else {
            System.out.println("Account not found!");
        }
    }

    private static void depositMoney() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.next();
        Account account = findAccountByNumber(accountNumber);
        if (account != null) {
            System.out.print("Enter Deposit Amount: ");
            if (scanner.hasNextDouble()) {
                double amount = scanner.nextDouble();
                account.deposit(amount);
                System.out.println("Deposited $" + amount + " to Account " + accountNumber);
            } else {
                System.out.println("Invalid amount. Please try again.");
                scanner.next(); // Clear invalid input
            }
        } else {
            System.out.println("Account not found!");
        }
    }

    private static void withdrawMoney() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.next();
        Account account = findAccountByNumber(accountNumber);
        if (account != null) {
            System.out.print("Enter Withdrawal Amount: ");
            if (scanner.hasNextDouble()) {
                double amount = scanner.nextDouble();
                if (account.withdraw(amount)) {
                    System.out.println("Withdrew $" + amount + " from Account " + accountNumber);
                }
            } else {
                System.out.println("Invalid amount. Please try again.");
                scanner.next(); // Clear invalid input
            }
        } else {
            System.out.println("Account not found!");
        }
    }

    private static void transferMoney() {
        System.out.print("Enter Your Account Number: ");
        String senderAccountNumber = scanner.next();
        Account senderAccount = findAccountByNumber(senderAccountNumber);
        if (senderAccount != null) {
            System.out.print("Enter Recipient Account Number: ");
            String recipientAccountNumber = scanner.next();
            Account recipientAccount = findAccountByNumber(recipientAccountNumber);
            if (recipientAccount != null) {
                System.out.print("Enter Transfer Amount: ");
                if (scanner.hasNextDouble()) {
                    double amount = scanner.nextDouble();
                    senderAccount.transfer(recipientAccount, amount);
                    System.out.println("Transferred $" + amount + " from Account " + senderAccount.getAccountNumber() + " to Account " + recipientAccount.getAccountNumber());
                } else {
                    System.out.println("Invalid amount. Please try again.");
                    scanner.next(); // Clear invalid input
                }
            } else {
                System.out.println("Recipient account not found!");
            }
        } else {
            System.out.println("Sender account not found!");
        }
    }

    private static void viewTransactionHistory() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.next();
        Account account = findAccountByNumber(accountNumber);
        if (account != null) {
            account.viewTransactionHistory();
        } else {
            System.out.println("Account not found!");
        }
    }

    private static void updatePersonalInfo() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.next();
        Account account = findAccountByNumber(accountNumber);
        if (account != null) {
            scanner.nextLine(); // Consume newline
            System.out.print("Enter New Account Holder Name: ");
            String newName = scanner.nextLine();
            account.updateAccountHolder(newName);
            System.out.println("Account holder name updated successfully!");
        } else {
            System.out.println("Account not found!");
        }
    }
}
